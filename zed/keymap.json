[
  {
    "use_key_equivalents": true,
    "bindings": {
      "cmd-+": ["zed::IncreaseBufferFontSize", { "persist": false }],
      "cmd--": ["zed::DecreaseBufferFontSize", { "persist": false }],
      "cmd-_": ["zed::ResetBufferFontSize", { "persist": false }]
    }
  }, 
  {
    "context": "Workspace",
    "bindings": {
      "ctrl-z": "workspace::ToggleZoom"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "space space": "file_finder::Toggle"
    }
  },
  {
    // put key-bindings here if you want them to work in normal & visual mode & project panel
    "context": "ProjectPanel || EmptyPane || (Editor && VimControl && !VimWaiting && !menu)",
    "bindings": {
      // tasks
      "space t a": "task::Spawn",
      // navigation
      "space -": "pane::SplitDown",
      "space =": "pane::SplitRight",
      "space tab": "tab_switcher::Toggle",
      "shift-l": "vim::GoToTab",
      "shift-h": "vim::GoToPreviousTab",
      "space h": "workspace::ActivatePaneLeft",
      "space j": "workspace::ActivatePaneDown",
      "space k": "workspace::ActivatePaneUp",
      "space l": "workspace::ActivatePaneRight",

      // debugger
      "space d s": "debugger::Start",
      "space d S": "debugger::Stop",
      "space d t": "debugger::ShowStackTrace",
      "space d r": "debugger::Restart",
      "space d i": "debugger::StepInto",
      "space d o": "debugger::StepOver",
      "space d u": "debugger::StepOut",
      "space d c": "debugger::Continue",
      "space d b": "editor::ToggleBreakpoint",
      "space d p": "debugger::Pause",
      
      // diagnostics
      "space s d": "diagnostics::Deploy",
      
      // projects
      "space f p": ["projects::OpenRecent", { "create_new_window": false }],
      "space f P": ["projects::OpenRecent", { "create_new_window": true }],
      
      // notification
      "space u n": "workspace::ClearAllNotifications",

      // marks
      "space m a": "vim::ToggleMarksView",
      // Git
      "space l g": [
        "task::Spawn",
        { "task_name": "Lazygit", "reveal_target": "center" }
      ],
      // fuzzy search
      "space s f": [
        "task::Spawn",
        { "task_name": "File Finder", "reveal_target": "center" }
      ],
      "space s g": [
        "task::Spawn",
        { "task_name": "Find in Files", "reveal_target": "center" }
      ],
      "space s t": [
        "task::Spawn",
        // Find in Files Selected Text
        { "task_name": "Find in Selected", "reveal_target": "center" }
      ]
    }
  },
  {
    // put key-bindings here if you want them to work in normal & visual mode
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      // outline
      "space s s": "outline::Toggle",
      // closing buffers
      "space b W": "pane::CloseCleanItems",
      "space b w": "pane::CloseOtherItems",
      // code actions and refactoring
      "space c a": "editor::ToggleCodeActions",
      "space c f": "editor::Format",
      "space c r ": "editor::Rename",
      "space e": "pane::RevealInProjectPanel",
      "space g b": "git::Blame",
      "space g B": "editor::OpenPermalinkToLine",
      // copy permalink to a line
      "space g Y": "editor::CopyPermalinkToLine",
      "space g h d": "editor::ExpandAllDiffHunks",
      "space g h D": "git::Diff",
      "space g h r": "git::Restore",
      "space g h R": "git::RestoreFile",
      // markdown
      "space m p": "markdown::OpenPreview",
      "space m P": "markdown::OpenPreviewToTheSide",
      "space s r": ["pane::DeploySearch", { "replace_enabled": true }],
      "space s w": ["task::Spawn", { "task_name": "find in files - selected text" }],
      "space t L": ["task::Rerun", { "reevaluate_context": true }],
      "space t l": "task::Rerun",
      "space t n": ["editor::SpawnNearestTask", { "reveal": "no_focus" }],
      "space t r": "task::Spawn",
      "space u i": "editor::ToggleInlayHints",
      "space u w": "editor::ToggleSoftWrap",
      "space u z": "workspace::ToggleCenteredLayout",
      "j": ["vim::Down", { "display_lines": true }],
      "k": ["vim::Up", { "display_lines": true }],
      "shift-y": ["workspace::SendKeystrokes", "y $"],
      "ctrl-space": "editor::SelectLargerSyntaxNode",
      "backspace": "editor::SelectSmallerSyntaxNode",
      "g y": ["workspace::SendKeystrokes", "\" + y"],
      "g p": "editor::Paste",
      "g r": "editor::FindAllReferences",
      "g f": "editor::OpenExcerpts",
      "] e": ["editor::GoToDiagnostic", { "severity": "error" }],
      "[ e": ["editor::GoToPreviousDiagnostic", { "severity": "error" }],
      "alt-k": "editor::MoveLineUp",
      "alt-j": "editor::MoveLineDown"
    }
  },
  {
    // Vim specific overrides
    "context": "VimControl && !menu",
    "bindings": {
      "J": ["workspace::SendKeystrokes", "m z J ` z"],
      "f": ["vim::PushFindForward", { "before": false, "multiline": true }],
      "t": ["vim::PushFindForward", { "before": true, "multiline": true }],
      "shift-f": ["vim::PushFindBackward", { "after": false, "multiline": true }],
      "shift-t": ["vim::PushFindBackward", { "after": true, "multiline": true }],
      "g s a": "vim::PushAddSurrounds",
      "g s r": ["vim::PushChangeSurrounds", {}],
      "g s d": "vim::PushDeleteSurrounds",
      "ctrl-u": ["workspace::SendKeystrokes", "ctrl-u z z"],
      "ctrl-d": ["workspace::SendKeystrokes", "ctrl-d z z"]
    }
  },
  {
    "context": "vim_mode == normal || vim_mode == visual",
    "bindings": {
      "s": "vim::PushSneak",
      "S": "vim::PushSneakBackward"
    }
  },
  {
    // Vim: File Tree ("ProjectPanel") actions
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "z c": "project_panel::CollapseSelectedEntry",
      "z o": "project_panel::ExpandSelectedEntry",
      "shift-o": "project_panel::RevealInFileManager",
      "r": "project_panel::Rename",
      "x": "project_panel::Cut",
      "y": "project_panel::Copy",
      "p": "project_panel::Paste",
      "d": "project_panel::Trash",
      "shift-d": ["project_panel::Trash", { "skip_prompt": true }],
      "a": "project_panel::NewFile",
      "shift-a": "project_panel::NewDirectory",
      "shift-y": "workspace::CopyRelativePath",
      "g y": "workspace::CopyPath",
      "q": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "TabSwitcher",
    "bindings": {
      "k": "menu::SelectPrevious",
      "j": "menu::SelectNext",
      "x": "tab_switcher::CloseSelectedItem"
    }
  },
  {
    // do we really need this?
    "context": "Pane",
    "bindings": {
      // "cmd-1": ["pane::ActivateItem", 0],
      // "cmd-2": ["pane::ActivateItem", 1],
      // "cmd-3": ["pane::ActivateItem", 2],
      // "cmd-4": ["pane::ActivateItem", 3],
      // "cmd-5": ["pane::ActivateItem", 4],
      // "cmd-6": ["pane::ActivateItem", 5],
      // "cmd-7": ["pane::ActivateItem", 6],
      // "cmd-8": ["pane::ActivateItem", 7],
      // "cmd-9": ["pane::ActivateItem", 8],
      // "cmd-0": "pane::ActivateLastItem"
    }
  },
  // {
  //   "context": "vim_operator == d",
  //   "bindings": {
  //     "o": "editor::ExpandAllDiffHunks",
  //     "r": "git::Restore"
  //   }
  // },
  // {
  //   "context": "vim_operator == a || vim_operator == i || vim_operator == cs",
  //   "bindings": {
  //     // mini.ai plugin behavior
  //     "Q": "vim::MiniQuotes",
  //     "B": "vim::MiniBrackets"
  //   }
  // },
  {
    "context": "vim_mode == visual",
    "bindings": {
      "shift-x": "vim::Exchange"
    }
  }
]
